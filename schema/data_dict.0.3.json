[
	{
		"siteQC_HL.csv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/siteQC_HL.csv",
			"title": "siteQC_HL.csv",
			"type": "object",
			"required": [
				"fdaargos_id",
				"genomic_identifier"
			],
			"properties": {
				"genome_assembly_id": {
					"$id": "#root/genome_assembly_id",
					"title": "genome_assembly_id",
					"description": "NCBI Assembly DB identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"fdaargos_id": {
					"$id": "#root/fdaargos_id",
					"title": "fdaargos_id",
					"description": "ARGOS identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"genomic_identifier": {
					"$id": "#root/genomic_identifier",
					"title": "genomic_identifier",
					"description": "identifier for the source genomic object",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"num_nuc_call": {
					"$id": "#root/num_nuc_call",
					"title": "num_nuc_call",
					"description": "Number of nucliotides called for this position",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"percent_nuc_call": {
					"$id": "#root/percent_nuc_call",
					"title": "percent_nuc_call",
					"description": "Total percentage of nucleotieds at this position that matched this call",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"genomic_coordinate_start": {
					"$id": "#root/genomic_coordinate_start",
					"title": "genomic_coordinate_start",
					"description": "Start position for this feature in the genome file",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"genomic_coordinates_end": {
					"$id": "#root/genomic_coordinates_end",
					"title": "genomic_coordinates_end",
					"description": "End position for this feature in the genome file",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"protein_coordinates_start": {
					"$id": "#root/protein_coordinates_start",
					"title": "protein_coordinates_start",
					"description": "Start position for this feature in the proteome file",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"protein_coordinates_end": {
					"$id": "#root/protein_coordinates_end",
					"title": "protein_coordinates_end",
					"description": "End position for this feature in the proteome file",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"source": {
					"$id": "#root/source",
					"title": "source",
					"description": "Source of genomic information in the file. From an SRA controled vocabulary: GENOMIC: [Genomic DNA (includes PCR products from genomic DNA)], TRANSCRIPTOMIC: [Transcription products or non genomic DNA (EST, cDNA, RT-PCR, screened libraries)], METAGENOMIC\t: [Mixed material from metagenome], METATRANSCRIPTOMIC: [Transcription products from community targets], SYNTHETIC: [Synthetic DNA], VIRAL RNA: [Viral RNA], OTHER:[Other, unspecified, or unknown library source material (please include additional info in the “design description”)]",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"seq_feature_tag": {
					"$id": "#root/seq_feature_tag",
					"title": "seq_feature_tag",
					"description": "Tags associated with this feature. Can be coverage, quality|entropy, mutations,indels, tailsd, disbalance, aniusotropyu, partiality",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"seq_feature_value": {
					"$id": "#root/seq_feature_value",
					"title": "seq_feature_value",
					"description": "Values for the tag associated with this feature",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"source_database": {
					"$id": "#root/source_database",
					"title": "source_database",
					"description": "Source database or resource for this feature",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	},
	{
		"SRA_ngsQC.tsv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/SRA_ngsQC.tsv",
			"title": "SRA_ngsQC.tsv",
			"type": "object",
			"required": [
				"sra_experiment_id",
				"sra_run_id",
				"num_of_bases",
				"file_size",
				"published",
				"source",
				"strategy",
				"layout",
				"file_type"
			],
			"properties": {
				"sra_experiment_id": {
					"$id": "#root/sra_experiment_id",
					"title": "sra_experiment_id",
					"description": "Experiment identifier assigned by SRA and linked to GenBank and other databases.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"sra_run_id": {
					"$id": "#root/sra_run_id",
					"title": "sra_run_id",
					"description": "Database identifier assigned by repository and linked to GenBank or other repository.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"biosample": {
					"$id": "#root/biosample",
					"title": "biosample",
					"description": "NCBI BioSample identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"num_of_bases": {
					"$id": "#root/num_of_bases",
					"title": "num_of_bases",
					"description": "Number of nucleotides represented in file",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"file_size": {
					"$id": "#root/file_size",
					"title": "file_size",
					"description": "File size",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"published": {
					"$id": "#root/published",
					"title": "published",
					"description": "Date of publication",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"source": {
					"$id": "#root/source",
					"title": "source",
					"description": "Source of genomic information in the file. From an SRA controled vocabulary: GENOMIC: [Genomic DNA (includes PCR products from genomic DNA)], TRANSCRIPTOMIC: [Transcription products or non genomic DNA (EST, cDNA, RT-PCR, screened libraries)], METAGENOMIC\t: [Mixed material from metagenome], METATRANSCRIPTOMIC: [Transcription products from community targets], SYNTHETIC: [Synthetic DNA], VIRAL RNA: [Viral RNA], OTHER:[Other, unspecified, or unknown library source material (please include additional info in the “design description”)]",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"strategy": {
					"$id": "#root/strategy",
					"title": "strategy",
					"description": "Strategy/method used to generate the NGS. Controled  vocabulary consisting of the following terms: WGA, WGS, WXS, RNA-Seq, miRNA-Seq, WCS, CLONE, POOLCLONE, AMPLICON, CLONEEND, FINISHING, ChIP-Seq, MNase-Seq, DNase-Hypersensitivity, Bisulfite-Seq, Tn-Seq, EST, FL-cDNA, CTS, MRE-Seq, MeDIP-Seq, MBD-Seq, Synthetic-Long-Read, OTHER",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"layout": {
					"$id": "#root/layout",
					"title": "layout",
					"description": "Sequencing library layout",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"library_newname": {
					"$id": "#root/library_newname",
					"title": "library_newname",
					"description": "Name of sequencing library",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"selection": {
					"$id": "#root/selection",
					"title": "selection",
					"description": "Library selection",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"instrument": {
					"$id": "#root/instrument",
					"title": "instrument",
					"description": "Name of instrument used for NGS.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"file_type": {
					"$id": "#root/file_type",
					"title": "file_type",
					"description": "Type of file representing the genomic data",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"reads_unaligned": {
					"$id": "#root/reads_unaligned ",
					"title": "reads_unaligned ",
					"description": "Number of reads in short_read pool that do not align to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"identified_reads": {
					"$id": "#root/identified_reads",
					"title": "identified_reads",
					"description": "The number of reads that were matched to a reference",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"taxonomy_id": {
					"$id": "#root/taxonomy_id",
					"title": "taxonomy_id",
					"description": "NCBI taxonomy identifier of the organism.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"lineage": {
					"$id": "#root/lineage",
					"title": "lineage",
					"description": "The complete taxonomic lineage for the taxonomic node indicated.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"percent_identified": {
					"$id": "#root/percent_identified",
					"title": "percent_identified",
					"description": "The percentage of reads that were matched to a reference",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"gc_content": {
					"$id": "#root/gc_content",
					"title": "gc_content",
					"description": "GC content of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	},
	{
		"assemblyQC_HL.tsv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/assemblyQC_HL.tsv",
			"title": "assemblyQC_HL.tsv",
			"type": "object",
			"required": [
				"biosample",
				"fdaargos_id",
				"num_chromosomes",
				"isolation_provider_name",
				"hive_object_id",
				"schema_version"
			],
			"properties": {
				"genome_assembly_id": {
					"$id": "#root/genome_assembly_id",
					"title": "genome_assembly_id",
					"description": "NCBI Assembly DB identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"strain": {
					"$id": "#root/strain",
					"title": "strain",
					"description": "microbial or eukaryotic strain name",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"biosample": {
					"$id": "#root/biosample",
					"title": "biosample",
					"description": "NCBI BioSample identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"fdaargos_id": {
					"$id": "#root/fdaargos_id",
					"title": "fdaargos_id",
					"description": "ARGOS identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"num_chromosomes": {
					"$id": "#root/num_chromosomes",
					"title": "num_chromosomes",
					"description": "Total number of chromosomes in the genome assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"bco_id": {
					"$id": "#root/bco_id",
					"title": "bco_id",
					"description": "BioCompute Object identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"taxonomy_id": {
					"$id": "#root/taxonomy_id",
					"title": "taxonomy_id",
					"description": "NCBI taxonomy identifier of the organism.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"id_method": {
					"$id": "#root/id_method",
					"title": "id_method",
					"description": "Species identification method.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"sample_type": {
					"$id": "#root/sample_type",
					"title": "sample_type",
					"description": "Type of sample used for the BioSample submission, if applicable.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host": {
					"$id": "#root/host",
					"title": "host",
					"description": "The natural host to the organism from which the sample was obtained.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"number_of_n_or_x": {
					"$id": "#root/number_of_n_or_x",
					"title": "number_of_n_or_x",
					"description": "Total number of Ns or Xs in the assembled genome.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"isolation_provider_name": {
					"$id": "#root/isolation_provider_name",
					"title": "isolation_provider_name",
					"description": "Name of the provider from which the biological sample was derived.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"isolation_acquisition_id": {
					"$id": "#root/isolation_acquisition_id",
					"title": "isolation_acquisition_id",
					"description": "Acquisition identifier for obtained isolate.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"contact_name": {
					"$id": "#root/contact_name",
					"title": "contact_name",
					"description": "Contact name associated with the BioSample.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"sequencing_method": {
					"$id": "#root/sequencing_method",
					"title": "sequencing_method",
					"description": "Sequencing method used to obtain the DNA fragments/sequences.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"n50": {
					"$id": "#root/n50",
					"title": "n50",
					"description": "Length of the shortest read to minimally represent 50% of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"l50": {
					"$id": "#root/l50",
					"title": "l50",
					"description": "Number of reads that minimally represent 50% of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"gc_content": {
					"$id": "#root/gc_content",
					"title": "gc_content",
					"description": "GC content of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"length": {
					"$id": "#root/length",
					"title": "length",
					"description": "Total length of the assembled genome.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_nuc_identity": {
					"$id": "#root/avg_nuc_identity",
					"title": "avg_nuc_identity",
					"description": "Average nucleotide identity between the assembly and the reference sequences.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"percent_assembly_greater_20x": {
					"$id": "#root/percent_assembly_greater_20x",
					"title": "percent_assembly_greater_20x",
					"description": "Summary statistics of percent assembly with 20x coverage, other summery statistics could also be used.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"query_coverage_against_reference": {
					"$id": "#root/query_coverage_against_reference",
					"title": "query_coverage_against_reference",
					"description": "BLAST query coverage of the entire assembly between the assembly and reference sequences.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"percent_identity_against_reference": {
					"$id": "#root/percent_identity_against_reference",
					"title": "percent_identity_against_reference",
					"description": "BLAST percent identity of the entire assembly between the assembly and reference sequences.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"seq_id": {
					"$id": "#root/seq_id",
					"title": "seq_id",
					"description": "Reference identifier to a specific sequence inside the assembled genome.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"n95": {
					"$id": "#root/n95",
					"title": "n95",
					"description": "Length of the shortest read to minimally represent 95% of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"l95": {
					"$id": "#root/l95",
					"title": "l95",
					"description": "Number of reads that minimally represent 95% of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"cnt_scaffolds": {
					"$id": "#root/cnt_scaffolds",
					"title": "cnt_scaffolds",
					"description": "Number of scaffolds to represent the assembled genome.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"cnt_contigs": {
					"$id": "#root/cnt_contigs",
					"title": "cnt_contigs",
					"description": "Number of contigs to represent the assembled genome.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"contigs_momentum": {
					"$id": "#root/contigs_momentum",
					"title": "contigs_momentum",
					"description": "Cumulative normalized momentum (contig_size*count) of all contigs.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"coverage_contigs": {
					"$id": "#root/coverage_contigs",
					"title": "coverage_contigs",
					"description": "Average coverage on contigs.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"reads_unaligned": {
					"$id": "#root/reads_unaligned",
					"title": "reads_unaligned",
					"description": "Number of reads in short_read pool that do not align to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"aligned_momentum": {
					"$id": "#root/aligned_momentum",
					"title": "aligned_momentum",
					"description": "Cumulative normalized momentum (aligned_size*count) of own reads aligned to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"overhang_momentum": {
					"$id": "#root/overhang_momentum",
					"title": "overhang_momentum",
					"description": "Cumulative normalized momentum (unaligned_size*count) of own reads unaligned to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"bases_percentile_aligned": {
					"$id": "#root/bases_percentile_aligned",
					"title": "bases_percentile_aligned",
					"description": "Percentile of bases on partially aligned reads with relation to count of all bases on aligned reads.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"cnt_gaps": {
					"$id": "#root/cnt_gaps",
					"title": "cnt_gaps",
					"description": "Number of gaps in an assembly as covered by own reads.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"size_gaps": {
					"$id": "#root/size_gaps",
					"title": "size_gaps",
					"description": "Cumulative size of gaps as covered by own reads.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"clonal_populations": {
					"$id": "#root/clonal_populations",
					"title": "clonal_populations",
					"description": "Number of clonal populations on assembly nephosome.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"clonal_expanse": {
					"$id": "#root/clonal_expanse",
					"title": "clonal_expanse",
					"description": "Total size of all clonal contigs.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"phred_average": {
					"$id": "#root/phred_average",
					"title": "phred_average",
					"description": "Average phred score of aligned base call.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"count_major_variations": {
					"$id": "#root/count_major_variations",
					"title": "count_major_variations",
					"description": "Number of +50% variations on a variation profile of own reads on avartion profile of own reads on assembly. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"indels_momentum": {
					"$id": "#root/indels_momentum",
					"title": "indels_momentum",
					"description": "Momentum of indels (count*percentile) on variation profile of own reads alignment to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"mutation_momentum": {
					"$id": "#root/mutation_momentum",
					"title": "mutation_momentum",
					"description": "Momentum of mutations (count*percentile) on variation profile of own reads  alignment to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"alignment_disbalance": {
					"$id": "#root/alignment_disbalance",
					"title": "alignment_disbalance",
					"description": "Ratio of forward and reverse own reads aligned on assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"alignmnet_anisotropy": {
					"$id": "#root/alignmnet_anisotropy",
					"title": "alignmnet_anisotropy",
					"description": "Anisotropy of basecalls with relation to own reads aligned to assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"rpkm": {
					"$id": "#root/rpkm",
					"title": "rpkm",
					"description": "Reads per kilobase of reference size per million alignments.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"fpkm": {
					"$id": "#root/fpkm",
					"title": "fpkm",
					"description": "Fragments per kilobase of reference size per million alignments. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"coverage_homogeneity": {
					"$id": "#root/coverage_homogeneity",
					"title": "coverage_homogeneity",
					"description": "Anisotropy of the coverage with relation to assembly frame.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"ambiguous_bases": {
					"$id": "#root/ambiguous_bases",
					"title": "ambiguous_bases",
					"description": "Number of IUPAC ambiguous bases in reads(Ns, Ys, etc.)",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"taxid_composition": {
					"$id": "#root/taxid_composition",
					"title": "taxid_composition",
					"description": "Taxonomic identifiers hit by 1% or more reads using CensuScope or something similar",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"seq_composition": {
					"$id": "#root/seq_composition",
					"title": "seq_composition",
					"description": "Sequence identifiers hit by 1% or more reads using CensuScope or something similar",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"assembly_type": {
					"$id": "#root/assembly_type",
					"title": "assembly_type",
					"description": "haploid, haploid-with-alt-loci (a haploid assembly with alternative loci, for example as provided by the Genome Reference Consortium for the human genome), diploid, unresolved diploid, or alternate pseudohaplotype. See the NCBI Assembly Data Model for a definition of these terms.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"assembly_level": {
					"$id": "#root/assembly_level",
					"title": "assembly_level",
					"description": "The highest level of assembly for any object in the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"schema_version": {
					"$id": "#root/schema_version",
					"title": "schema_version",
					"description": "Version of the biosample_metadata, ngsQC, assemblyQC, siteQC",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"hive_object_id": {
					"$id": "#root/hive_object_id",
					"title": "hive_object_id",
					"description": "HIVE object ID which is assigned automatically within the HIVE Platform. This ID assists with internal tracking and programatic inquires with in the HIVE Platfrom ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"organism_name": {
					"$id": "#root/organism_name",
					"title": "organism_name",
					"description": "Name of the expected organism. Should corrispond to a NCBI Taxonomy node",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"lineage": {
					"$id": "#root/lineage",
					"title": "lineage",
					"description": "The complete taxonomic lineage for the taxonomic node indicated.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	},
	{
		"biosampleMeta_HL.tsv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/biosampleMeta_HL.tsv",
			"title": "biosampleMeta_HL.tsv",
			"type": "object",
			"required": [
				"biosample",
				"srs_id",
				"strain",
				"organism_name",
				"sample_name",
				"taxonomy_id",
				"collected_by",
				"collection_date",
				"geo_loc_name",
				"isolation_source",
				"host",
				"schema_version"
			],
			"properties": {
				"biosample": {
					"$id": "#root/biosample",
					"title": "biosample",
					"description": "NCBI BioSample identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"srs_id": {
					"$id": "#root/srs_id",
					"title": "srs_id",
					"description": "SRA identifier for a BioSample's genomic file.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"strain": {
					"$id": "#root/strain",
					"title": "strain",
					"description": "microbial or eukaryotic strain name",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"organism_name": {
					"$id": "#root/organism_name",
					"title": "organism_name",
					"description": "Name of the expected organism. Should corrispond to a NCBI Taxonomy node",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"sample_name": {
					"$id": "#root/sample_name",
					"title": "sample_name",
					"description": "sample name in source database",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"taxonomy_id": {
					"$id": "#root/taxonomy_id",
					"title": "taxonomy_id",
					"description": "NCBI taxonomy identifier of the organism.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"isolate": {
					"$id": "#root/isolate",
					"title": "isolate",
					"description": "identification or description of the specific individual from which this sample was obtained",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"collected_by": {
					"$id": "#root/collected_by",
					"title": "collected_by",
					"description": "Name of persons or institute who collected the sample",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"collection_date": {
					"$id": "#root/collection_date",
					"title": "collection_date",
					"description": "the date on which the sample was collected; date/time ranges are supported by providing two dates from among the supported value formats, delimited by a forward-slash character; collection times are supported by adding \"T\", then the hour and minute after the date, and must be in Coordinated Universal Time (UTC),",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"geo_loc_name": {
					"$id": "#root/geo_loc_name",
					"title": "geo_loc_name",
					"description": "Geographical origin of the sample; use the appropriate name from this list http://www.insdc.org/documents/country-qualifier-vocabulary. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"isolation_source": {
					"$id": "#root/isolation_source",
					"title": "isolation_source",
					"description": "Describes the physical, environmental and/or local geographical source of the biological sample from which the sample was derived.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"lat_lon": {
					"$id": "#root/lat_lon",
					"title": "lat_lon",
					"description": "The geographical coordinates of the location where the sample was collected.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"culture_collection": {
					"$id": "#root/culture_collection",
					"title": "culture_collection",
					"description": "Name of source institute and unique culture identifier. See the description for the proper format and list of allowed institutes, http://www.insdc.org/controlled-vocabulary-culturecollection-qualifier",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host": {
					"$id": "#root/host",
					"title": "host",
					"description": "The natural host to the organism from which the sample was obtained.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_age": {
					"$id": "#root/host_age",
					"title": "host_age",
					"description": "Age of host at the time of sampling",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_description": {
					"$id": "#root/host_description",
					"title": "host_description",
					"description": "Additional information not included in other defined vocabulary fields",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_disease": {
					"$id": "#root/host_disease",
					"title": "host_disease",
					"description": "Name of relevant disease, e.g. Salmonella gastroenteritis. Controlled vocabulary, http://bioportal.bioontology.org/ontologies/1009 or http://www.ncbi.nlm.nih.gov/mesh",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_disease_outcome": {
					"$id": "#root/host_disease_outcome",
					"title": "host_disease_outcome",
					"description": "Final outcome of disease, e.g., death, chronic disease, recovery",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_disease_stage": {
					"$id": "#root/host_disease_stage",
					"title": "host_disease_stage",
					"description": "Stage of disease at the time of sampling",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_health_state": {
					"$id": "#root/host_health_state",
					"title": "host_health_state",
					"description": "Information regarding health state of the individual sampled at the time of sampling",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"host_sex": {
					"$id": "#root/host_sex",
					"title": "host_sex",
					"description": "Gender or physical sex of the host",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"id_method": {
					"$id": "#root/identification_method",
					"title": "identification_method",
					"description": "Species identification method.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"schema_version": {
					"$id": "#root/schema_version",
					"title": "schema_version",
					"description": "Version of the biosample_metadata, ngsQC, assemblyQC, siteQC",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"hive_object_id": {
					"$id": "#root/hive_object_id",
					"title": "hive_object_id",
					"description": "HIVE object ID which is assigned automatically within the HIVE Platform. This ID assists with internal tracking and programatic inquires with in the HIVE Platfrom ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	},
	{
		"ngsQC_HL.tsv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/ngsQC_HL.tsv",
			"title": "ngsQC_HL.tsv",
			"type": "object",
			"required": [
				"genome_assembly_id",
				"file_name",
				"avg_file_quality",
				"min_read_length",
				"pos_outlier_count",
				"num_reads",
				"avg_read_length",
				"gc_content",
				"strategy",
				"hive_object_id"
			],
			"properties": {
				"organism_name": {
					"$id": "#root/organism_name",
					"title": "organism_name",
					"description": "Name of the expected organism. Should corrispond to a NCBI Taxonomy node",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"lineage": {
					"$id": "#root/lineage",
					"title": "lineage",
					"description": "The complete taxonomic lineage for the taxonomic node indicated.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"genome_assembly_id": {
					"$id": "#root/genome_assembly_id",
					"title": "genome_assembly_id",
					"description": "NCBI Assembly DB identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"strain": {
					"$id": "#root/strain",
					"title": "strain",
					"description": "microbial or eukaryotic strain name",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"biosample": {
					"$id": "#root/biosample",
					"title": "biosample",
					"description": "NCBI BioSample identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"fdaargos_id": {
					"$id": "#root/fdaargos_id",
					"title": "fdaargos_id",
					"description": "ARGOS identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"file_name": {
					"$id": "#root/file_name",
					"title": "file_name",
					"description": "FASTQ file name used for the HIVE analysis.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_file_quality": {
					"$id": "#root/avg_file_quality",
					"title": "avg_file_quality",
					"description": "Average quality (in phred score) of sequences in a FASTQ read file.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"min_read_length": {
					"$id": "#root/min_read_length",
					"title": "min_read_length",
					"description": "Length (in base pairs) of the shortest sequence(s) in a FASTA/FASTQ read file.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"pos_outlier_count": {
					"$id": "#root/pos_outlier_count",
					"title": "pos_outlier_count",
					"description": "Count of positions the quality of which is significantly different (extremely low or high).",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"num_reads": {
					"$id": "#root/num_reads",
					"title": "num_reads",
					"description": "Number of sequences present in a FASTA/FASTQ read file.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_read_length": {
					"$id": "#root/avg_read_length",
					"title": "avg_read_length",
					"description": "Average length of sequences in a FASTA/FASTQ read file.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"max_read_length": {
					"$id": "#root/max_read_length",
					"title": "max_read_length",
					"description": "Length (in base pairs) of longest sequence(s) present in a FASTA/FASTQ read file.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"gc_content": {
					"$id": "#root/gc_content",
					"title": "gc_content",
					"description": "GC content of the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"strategy": {
					"$id": "#root/strategy",
					"title": "strategy",
					"description": "Strategy/method used to generate the NGS. Controled  vocabulary consisting of the following terms: WGA, WGS, WXS, RNA-Seq, miRNA-Seq, WCS, CLONE, POOLCLONE, AMPLICON, CLONEEND, FINISHING, ChIP-Seq, MNase-Seq, DNase-Hypersensitivity, Bisulfite-Seq, Tn-Seq, EST, FL-cDNA, CTS, MRE-Seq, MeDIP-Seq, MBD-Seq, Synthetic-Long-Read, OTHER",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"sra_run_id": {
					"$id": "#root/sra_run_id",
					"title": "sra_run_id",
					"description": "Database identifier assigned by repository and linked to GenBank or other repository.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"wgs_accession": {
					"$id": "#root/wgs_accession",
					"title": "wgs_accession",
					"description": "NCBI Whole Genome Shotgun (WGS) accession number.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"level": {
					"$id": "#root/level",
					"title": "level",
					"description": "HIVE",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"instrument": {
					"$id": "#root/instrument",
					"title": "instrument",
					"description": "Name of instrument used for NGS.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"id_method": {
					"$id": "#root/id_method",
					"title": "id_method",
					"description": "Species identification method.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"codon_table": {
					"$id": "#root/codon_table",
					"title": "codon_table",
					"description": "A list containing the different types of DNA sequences, including Standard, Vertebrate Mitochondrial, Yeast Mitochondrial, etc.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"percent_coding": {
					"$id": "#root/percent_coding",
					"title": "percent_coding",
					"description": "The relative frequency of sequences that are protein coding for each DNA sequence type.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"percent_not_coding": {
					"$id": "#root/percent_not_coding",
					"title": "percent_not_coding",
					"description": "The relative frequency of sequences that are not protein coding for each DNA sequence type.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"cumulative_percent_reads": {
					"$id": "#root/cumulative_percent_reads",
					"title": "cumulative_percent_reads",
					"description": "A list containg the number of reads that positionally correspond to the density of Ns list values. Can be used to generate cumulative percentage of N density in reads.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"density_n_per_read": {
					"$id": "#root/density_n_per_read",
					"title": "density_n_per_read",
					"description": "A list of density values of Ns per sequence read.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"complexity_percent": {
					"$id": "#root/complexity_percent",
					"title": "complexity_percent",
					"description": "Percentage of sequences that are complex. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"non_complex_percent": {
					"$id": "#root/non_complex_percent",
					"title": "non_complex_percent",
					"description": "Percentage of sequences that are not complex. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_quality_a": {
					"$id": "#root/avg_quality_a",
					"title": "avg_quality_a",
					"description": "The average cumulative quality score of adenine in the NGS. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_quality_t": {
					"$id": "#root/avg_quality_t",
					"title": "avg_quality_t",
					"description": "The average cumulative quality score of thiamine in the NGS.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_quality_g": {
					"$id": "#root/avg_quality_g",
					"title": "avg_quality_g",
					"description": "The average cumulative quality score of guanine in the NGS. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"avg_quality_c": {
					"$id": "#root/avg_quality_c",
					"title": "avg_quality_c",
					"description": "The average cumulative quality score of cytosine in the NGS.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"count_a": {
					"$id": "#root/count_a",
					"title": "count_a",
					"description": "The total count of adenines in the NGS. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"count_c": {
					"$id": "#root/count_c",
					"title": "count_c",
					"description": "The total count of cytosines in the NGS. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"count_g": {
					"$id": "#root/count_g",
					"title": "count_g",
					"description": "The total count of guanines in the NGS. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"count_t": {
					"$id": "#root/count_t",
					"title": "count_t",
					"description": "The total count of thiamaines in the NGS. ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"schema_version": {
					"$id": "#root/schema_version",
					"title": "schema_version",
					"description": "Version of the biosample_metadata, ngsQC, assemblyQC, siteQC",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"hive_object_id": {
					"$id": "#root/hive_object_id",
					"title": "hive_object_id",
					"description": "HIVE object ID which is assigned automatically within the HIVE Platform. This ID assists with internal tracking and programatic inquires with in the HIVE Platfrom ",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	},
	{
		"PRJNA231221_AssemblyUpdated.tsv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/PRJNA231221_AssemblyUpdated.tsv",
			"title": "PRJNA231221_AssemblyUpdated.tsv",
			"type": "object",
			"required": [
				"genome_assembly_id",
				"level",
				"assembly_level",
				"num_chromosomes",
				"biosample",
				"strain",
				"organism_name",
				"bioproject",
				"taxonomy_id",
				"lineage"
			],
			"properties": {
				"genome_assembly_id": {
					"$id": "#root/genome_assembly_id",
					"title": "genome_assembly_id",
					"description": "NCBI Assembly DB identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"level": {
					"$id": "#root/level",
					"title": "level",
					"description": "HIVE",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"assembly_level": {
					"$id": "#root/assembly_level",
					"title": "assembly_level",
					"description": "The highest level of assembly for any object in the assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"num_chromosomes": {
					"$id": "#root/num_chromosomes",
					"title": "num_chromosomes",
					"description": "Total number of chromosomes in the genome assembly.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"biosample": {
					"$id": "#root/biosample",
					"title": "biosample",
					"description": "NCBI BioSample identifier.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"strain": {
					"$id": "#root/strain",
					"title": "strain",
					"description": "microbial or eukaryotic strain name",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"organism_name": {
					"$id": "#root/Taxonomy Name",
					"title": "Taxonomy Name",
					"description": "Name of the expected organism. Should corrispond to a NCBI Taxonomy node",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"bioproject": {
					"$id": "#root/BioPproject",
					"title": "BioPproject",
					"description": "NCBI BioProject DB ID. A BioProject is a collection of biological data for a single initiative, originating from a single organization or from a consortium.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"taxonomy_id": {
					"$id": "#root/taxonomy_id",
					"title": "taxonomy_id",
					"description": "NCBI taxonomy identifier of the organism.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"lineage": {
					"$id": "#root/lineage",
					"title": "lineage",
					"description": "The complete taxonomic lineage for the taxonomic node indicated.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	},
	{
		"sars-cov-2_lineage_mutations.tsv": {
			"definitions": {
			},
			"$schema": "http://json-schema.org/draft-07/schema#",
			"$id": "https://data.argos.org/schema/sars-cov-2_lineage_mutations.tsv",
			"title": "sars-cov-2_lineage_mutations.tsv",
			"type": "object",
			"required": [
				"uniprotkb_canonical_ac",
				"found_in",
				"gene_name",
				"protein_name",
				"evidence_ECO0000313",
				"begin_aa_pos",
				"end_aa_pos",
				"mutation_type",
				"is_known_glycoprotein",
				"motif_start",
				"ref_motif",
				"alt_motif",
				"effect",
				"note"
			],
			"properties": {
				"uniprotkb_canonical_ac": {
					"$id": "#root/uniprotkb_canonical_ac",
					"title": "uniprotkb_canonical_ac",
					"description": "Uniprot canonical sequence accession. To reduce redundancy, the UniProtKB/Swiss-Prot policy is to describe all the protein products encoded by one gene in a given species in a single entry.",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"found_in": {
					"$id": "#root/found_in",
					"title": "found_in",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"gene_name": {
					"$id": "#root/gene_name",
					"title": "gene_name",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"protein_name": {
					"$id": "#root/protein_name",
					"title": "protein_name",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"evidence_ECO0000313": {
					"$id": "#root/evidence_ECO0000313",
					"title": "evidence_ECO0000313",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"begin_aa_pos": {
					"$id": "#root/begin_aa_pos",
					"title": "begin_aa_pos",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"end_aa_pos": {
					"$id": "#root/end_aa_pos",
					"title": "end_aa_pos",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"mutation_type": {
					"$id": "#root/mutation_type",
					"title": "mutation_type",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"is_known_glycoprotein": {
					"$id": "#root/is_known_glycoprotein",
					"title": "is_known_glycoprotein",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"motif_start": {
					"$id": "#root/motif_start",
					"title": "motif_start",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"ref_motif": {
					"$id": "#root/ref_motif",
					"title": "ref_motif",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"alt_motif": {
					"$id": "#root/alt_motif",
					"title": "alt_motif",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"effect": {
					"$id": "#root/effect",
					"title": "effect",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				},
				"note": {
					"$id": "#root/note",
					"title": "note",
					"description": "?",
					"type": "string",
					"default": " ",
					"examples": " ",
					"pattern": "^.*$"
				}
			}
		}
	}
]